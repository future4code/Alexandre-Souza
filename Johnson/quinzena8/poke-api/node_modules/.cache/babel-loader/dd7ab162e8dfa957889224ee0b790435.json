{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\Desktop\\\\Labenu\\\\Git\\\\Alexandre-Souza\\\\Johnson\\\\quinzena8\\\\poke-api\\\\src\\\\components\\\\PokeCard\\\\PokeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContainerPrincipal = styled.div`\n    flex-direction: column;\n    margin: auto;\n    flex-grow: 1;\n    width: 100%;\n`;\n_c = ContainerPrincipal;\n\nfunction PokeCard(props) {\n  _s();\n\n  const [pokemon, setPokemon] = useState({}); // método que roda após a montagem do componente\n\n  useEffect(() => {\n    pegaPokemon(props.pokemon);\n  }, []); // método que roda após a atualização do componente.\n  // Um dos casos de atualização do componente é a\n  // mudança da props que está sendo passado pra ele\n\n  useEffect(() => {\n    if (props.pokemon !== pokemon) {\n      pegaPokemon(props.pokemon);\n    }\n\n    console.log('Atualizou', props.pokemon);\n  }, [props.pokemon]); // função que bate na poke API com um nome específico de pokemon\n  // Isso permite que consigamos pegar as infos dos pokemons.\n  // Nos métodos de ciclo de vida, ela é chamada passando como\n  // parâmetro o nome de pokemon que está chegando como props.\n\n  const pegaPokemon = pokeName => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`).then(response => {\n      // guarda as infos do pokemon no estado\n      setPokemon(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContainerPrincipal, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: pokemon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [pokemon.weight, \" Kg\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), pokemon.types && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: pokemon.types[0].type.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this), pokemon.sprites && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pokemon.sprites.front_default,\n      alt: pokemon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PokeCard, \"wk2A1ml1iw8Ubwb8ZMqNhC/d0w4=\");\n\n_c2 = PokeCard;\nexport default PokeCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContainerPrincipal\");\n$RefreshReg$(_c2, \"PokeCard\");","map":{"version":3,"sources":["C:/Users/Samsung/Desktop/Labenu/Git/Alexandre-Souza/Johnson/quinzena8/poke-api/src/components/PokeCard/PokeCard.js"],"names":["React","useState","useEffect","axios","styled","ContainerPrincipal","div","PokeCard","props","pokemon","setPokemon","pegaPokemon","console","log","pokeName","get","then","response","data","catch","err","name","weight","types","type","sprites","front_default"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,GAAI;AACtC;AACA;AACA;AACA;AACA,CALA;KAAMD,kB;;AAON,SAASE,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC,CADwB,CAExB;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,WAAW,CAACH,KAAK,CAACC,OAAP,CAAX;AACD,GAFQ,EAEP,EAFO,CAAT,CAHwB,CAMxB;AACA;AACA;;AACAP,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIM,KAAK,CAACC,OAAN,KAAkBA,OAAtB,EAA+B;AAC3BE,MAAAA,WAAW,CAACH,KAAK,CAACC,OAAP,CAAX;AACD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,KAAK,CAACC,OAA/B;AACH,GALQ,EAKP,CAACD,KAAK,CAACC,OAAP,CALO,CAAT,CATwB,CAexB;AACA;AACA;AACA;;AACA,QAAME,WAAW,GAAGG,QAAQ,IAAI;AAC9BX,IAAAA,KAAK,CACFY,GADH,CACQ,qCAAoCD,QAAS,EADrD,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACAP,MAAAA,UAAU,CAACO,QAAQ,CAACC,IAAV,CAAV;AACD,KALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,KARH;AASD,GAVD;;AAWE,sBACE,QAAC,kBAAD;AAAA,4BACE;AAAA,gBAAIX,OAAO,CAACY;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAIZ,OAAO,CAACa,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGb,OAAO,CAACc,KAAR,iBAAiB;AAAA,gBAAId,OAAO,CAACc,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBH;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHpB,EAIGZ,OAAO,CAACgB,OAAR,iBACC;AAAK,MAAA,GAAG,EAAEhB,OAAO,CAACgB,OAAR,CAAgBC,aAA1B;AAAyC,MAAA,GAAG,EAAEjB,OAAO,CAACY;AAAtD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH;;GAxCQd,Q;;MAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerPrincipal = styled.div`\r\n    flex-direction: column;\r\n    margin: auto;\r\n    flex-grow: 1;\r\n    width: 100%;\r\n`\r\n\r\nfunction PokeCard (props) {\r\n  const [pokemon,setPokemon]=useState({})\r\n  // método que roda após a montagem do componente\r\n  useEffect(()=>{\r\n    pegaPokemon(props.pokemon)\r\n  },[])\r\n  // método que roda após a atualização do componente.\r\n  // Um dos casos de atualização do componente é a\r\n  // mudança da props que está sendo passado pra ele\r\n  useEffect(()=>{\r\n    if (props.pokemon !== pokemon) {\r\n        pegaPokemon(props.pokemon);\r\n      }    \r\n      console.log('Atualizou', props.pokemon)\r\n  },[props.pokemon])\r\n  // função que bate na poke API com um nome específico de pokemon\r\n  // Isso permite que consigamos pegar as infos dos pokemons.\r\n  // Nos métodos de ciclo de vida, ela é chamada passando como\r\n  // parâmetro o nome de pokemon que está chegando como props.\r\n  const pegaPokemon = pokeName => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`)\r\n      .then(response => {\r\n        // guarda as infos do pokemon no estado\r\n        setPokemon(response.data)        \r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n    return (\r\n      <ContainerPrincipal>\r\n        <p>{pokemon.name}</p>\r\n        <p>{pokemon.weight} Kg</p>\r\n        {pokemon.types && <p>{pokemon.types[0].type.name}</p>}\r\n        {pokemon.sprites && (\r\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n        )}\r\n      </ContainerPrincipal>\r\n    );  \r\n}\r\nexport default PokeCard;"]},"metadata":{},"sourceType":"module"}